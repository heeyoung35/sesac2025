/**
 * ES5까지 사용되던 var 키워드는 세 가지 주요 문제점을 가지고 있다.
 */

// 1. 변수 중복 선언 허용 -> 코드의 신뢰성 하락
var msg ='안녕하세요';
console.log(msg);

var msg ='안녕히가세요~';  // 위에서 이미 변수가 선언 되었는데 다시 동일한 변수명으로 선언해도 허용이 되기 때문에 이전 변수의 내용이 덮어씌어 진다. 
console.log(msg);


// 2. 함수 레벨 스코프{코드블럭} -> 의도치 않은 변수 오염
var i = 100; // 전역 변수, 지역변수(for, if, function 내부에서 사용하는 변수)

for (var i = 0; i < 5; i++) {
    console.log('for문 내부의 i:', i);  // var는 함수는 전역변수에서는 영향을 주지 않는데 for,if문에서는 전역변수에 영향을 준다. 
}
console.log('for문 바깥의 i:' , i); // for문 바깥의 i: 5  출력, 결국 for문의 중괄호는 무시되어 전역변수에 영향을 주어서 출력이 된다.

// 3. 변수 호이스팅 -> 코드의 가독성 및 예측 가능성 저하
console.log(test); // undefined가 출력되는 것으로 선언하기도 전에 할당이 된 것처럼 동작이 된다. 
// 선언이 가장 위로 끌어올려진 것처럼 동작함
var test;  // 할당만 하고 값은 주지 않은 상태인데 코드의 흐름을 위해서 선언 -> 할당 -> 호출이 되어야 하는데 var는 이것을 뒤집는다. 
// console.log(test); // 선언만 하고 할당하지 않으면 undefined가 출력